[{"/Users/jim/Documents/projects/tictactoe/tictactoe/src/index.js":"1","/Users/jim/Documents/projects/tictactoe/tictactoe/src/reportWebVitals.js":"2","/Users/jim/Documents/projects/tictactoe/tictactoe/src/App.js":"3","/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/Board.js":"4","/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/Square.js":"5","/Users/jim/Documents/projects/tictactoe/tictactoe/src/styles/GeneralStyles.js":"6","/Users/jim/Documents/projects/tictactoe/tictactoe/src/styles/Animations.js":"7","/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/PlayerControls.js":"8","/Users/jim/Documents/projects/tictactoe/tictactoe/src/styles/PlayerControl.js":"9","/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/Title.js":"10"},{"size":500,"mtime":1611964530968,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611964530969,"results":"13","hashOfConfig":"12"},{"size":5596,"mtime":1612027257349,"results":"14","hashOfConfig":"12"},{"size":1382,"mtime":1612012680109,"results":"15","hashOfConfig":"12"},{"size":571,"mtime":1612012669506,"results":"16","hashOfConfig":"12"},{"size":1303,"mtime":1612027372273,"results":"17","hashOfConfig":"12"},{"size":895,"mtime":1612028079749,"results":"18","hashOfConfig":"12"},{"size":4487,"mtime":1612026834965,"results":"19","hashOfConfig":"12"},{"size":583,"mtime":1612025235009,"results":"20","hashOfConfig":"12"},{"size":792,"mtime":1612027976512,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"w9rgb7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/jim/Documents/projects/tictactoe/tictactoe/src/index.js",[],["48","49"],"/Users/jim/Documents/projects/tictactoe/tictactoe/src/reportWebVitals.js",[],"/Users/jim/Documents/projects/tictactoe/tictactoe/src/App.js",["50","51","52","53","54"],"import { useState, useEffect } from 'react';\nimport Board from './components/Board';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { IoMdColorPalette } from 'react-icons/io';\nimport './App.css';\nimport {\n  WinnerAnnouncementContainer,\n  WinnerAnnouncementText,\n} from './styles/GeneralStyles';\nimport { winnerVariants } from './styles/Animations';\nimport PlayerControls from './components/PlayerControls';\nimport Title from './components/Title';\n\nfunction App() {\n  const [startingPlayer, setStartingPlayer] = useState('P1');\n  const [player1Color, setPlayer1Color] = useState('#0000FF');\n  const [player2Color, setPlayer2Color] = useState('#008000');\n  const [curPlayer, setCurPlayer] = useState('P1');\n  const [winner, setWinner] = useState('');\n  const [squaresRemaining, setSquaresRemaining] = useState(9);\n  const [board, setBoard] = useState([\n    {\n      rowNumber: '1',\n      contents: [\n        { id: 101, owner: null },\n        { id: 102, owner: null },\n        { id: 103, owner: null },\n      ],\n    },\n    {\n      rowNumber: '2',\n      contents: [\n        { id: 201, owner: null },\n        { id: 202, owner: null },\n        { id: 203, owner: null },\n      ],\n    },\n    {\n      rowNumber: '3',\n      contents: [\n        { id: 301, owner: null },\n        { id: 302, owner: null },\n        { id: 303, owner: null },\n      ],\n    },\n  ]);\n\n  const resetHandler = () => {\n    setBoard([\n      {\n        rowNumber: '1',\n        contents: [\n          { id: 101, owner: null },\n          { id: 102, owner: null },\n          { id: 103, owner: null },\n        ],\n      },\n      {\n        rowNumber: '2',\n        contents: [\n          { id: 201, owner: null },\n          { id: 202, owner: null },\n          { id: 203, owner: null },\n        ],\n      },\n      {\n        rowNumber: '3',\n        contents: [\n          { id: 301, owner: null },\n          { id: 302, owner: null },\n          { id: 303, owner: null },\n        ],\n      },\n    ]);\n\n    if (!startingPlayer || startingPlayer === 'Rnd') {\n      setCurPlayer(Math.random() > 0.5 ? 'P1' : 'P2');\n    } else {\n      setCurPlayer(startingPlayer);\n    }\n    setWinner('');\n    setSquaresRemaining(9);\n  };\n\n  // any full row, any column or any diagonal\n\n  useEffect(() => {\n    let winner = null;\n\n    let i = 0;\n    let ii = 0;\n    //check rows\n    for (let i in board) {\n      if (\n        board[i].contents[0].owner &&\n        board[i].contents[0].owner === board[i].contents[1].owner &&\n        board[i].contents[0].owner === board[i].contents[2].owner\n      ) {\n        console.log('winner declared by check rows');\n        winner = board[i].contents[0].owner;\n      }\n    }\n\n    //Check columns\n    for (let ii in board) {\n      if (\n        board[0].contents[ii].owner &&\n        board[0].contents[ii].owner === board[1].contents[ii].owner &&\n        board[0].contents[ii].owner === board[2].contents[ii].owner\n      ) {\n        console.log('winner declared by check columns');\n        winner = board[0].contents[ii].owner;\n      }\n    }\n\n    // Check diagonals\n    if (\n      (board[0].contents[0].owner &&\n        board[0].contents[0].owner === board[1].contents[1].owner &&\n        board[0].contents[0].owner === board[2].contents[2].owner) ||\n      (board[0].contents[2].owner &&\n        board[0].contents[2].owner === board[1].contents[1].owner &&\n        board[0].contents[2].owner === board[2].contents[0].owner)\n    ) {\n      console.log('winner declared by check diagnonals');\n      winner = board[1].contents[1].owner;\n    }\n\n    if (winner) {\n      setWinner(winner);\n    }\n  }, [board]);\n\n  // This is called from the Board function when a player makes a move\n  const playerTurnHandler = (board) => {\n    if (!winner) {\n      setBoard(board);\n      setSquaresRemaining((curVal) => curVal - 1);\n\n      // Switch the current player\n      if (curPlayer === 'P1') {\n        setCurPlayer('P2');\n      } else {\n        setCurPlayer('P1');\n      }\n    }\n  };\n\n  const handleColorChangeComplete = (color, player) => {\n    if (player === 'P1' && color.hex !== player2Color) {\n      setPlayer1Color(color.hex);\n    } else if (player === 'P2' && color.hex !== player1Color) {\n      setPlayer2Color(color.hex);\n    }\n  };\n\n  return (\n    <div className=\"pageBody\">\n      <Title />\n\n      <PlayerControls\n        color={player1Color}\n        handleColorChange={(color, player) =>\n          handleColorChangeComplete(color, player)\n        }\n        curPlayer={curPlayer}\n        player1Color={player1Color}\n        player2Color={player2Color}\n        resetHandler={resetHandler}\n        startingPlayer={startingPlayer}\n        setStartingPlayer={setStartingPlayer}\n      />\n      <Board\n        curPlayer={curPlayer}\n        board={board}\n        playerTurnHandler={(board) => playerTurnHandler(board)}\n        player1Color={player1Color}\n        player2Color={player2Color}\n      />\n      {winner && (\n        <WinnerAnnouncementContainer\n          variants={winnerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          <WinnerAnnouncementText>{`${curPlayer} is the winner!`}</WinnerAnnouncementText>\n        </WinnerAnnouncementContainer>\n      )}\n      {squaresRemaining === 0 && !winner && (\n        <WinnerAnnouncementContainer\n          variants={winnerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          <WinnerAnnouncementText>\n            All available squares have been used. Please reset the game\n          </WinnerAnnouncementText>\n        </WinnerAnnouncementContainer>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/Board.js",["55"],"import { useState } from 'react';\nimport Square from './Square';\nimport styled from 'styled-components';\n\nconst BoardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 50px;\n`;\nconst RowContainer = styled.div`\n  display: flex;\n`;\n\nconst Board = (props) => {\n  console.log(props.player1Color);\n  const SquareClickedHandler = (rowNumber, squareId) => {\n    const newBoard = [...props.board];\n\n    for (let i in newBoard[rowNumber - 1].contents) {\n      if (\n        newBoard[rowNumber - 1].contents[i].id === squareId &&\n        !newBoard[rowNumber - 1].contents[i].owner\n      ) {\n        newBoard[rowNumber - 1].contents[i].owner = props.curPlayer;\n        props.playerTurnHandler(newBoard);\n      }\n    }\n  };\n\n  const boardToDisplay = props.board.map((row) => {\n    return (\n      <RowContainer key={row.rowNumber}>\n        {row.contents.map((boxInRow) => {\n          return (\n            <Square\n              key={boxInRow.id}\n              owner={boxInRow.owner}\n              clicked={() => SquareClickedHandler(row.rowNumber, boxInRow.id)}\n              player1Color={props.player1Color}\n              player2Color={props.player2Color}\n            />\n          );\n        })}\n      </RowContainer>\n    );\n  });\n\n  return <BoardContainer>{boardToDisplay}</BoardContainer>;\n};\n\nexport default Board;\n","/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/Square.js",[],"/Users/jim/Documents/projects/tictactoe/tictactoe/src/styles/GeneralStyles.js",[],"/Users/jim/Documents/projects/tictactoe/tictactoe/src/styles/Animations.js",["56"],"import { motion } from 'framer-motion';\n\nexport const winnerVariants = {\n  hidden: {\n    opacity: 0,\n    y: '-100vh',\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      type: 'spring',\n      spring: 120,\n    },\n  },\n};\n\nexport const ColourPickerVariants = {\n  hidden: {\n    opacity: 0,\n    x: '-100vw',\n  },\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      type: 'spring',\n      spring: 120,\n    },\n  },\n};\n\nexport const ColourPicker2Variants = {\n  hidden: {\n    opacity: 0,\n    x: '100vw',\n  },\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      type: 'spring',\n      spring: 120,\n    },\n  },\n};\n\nexport const TitleParentVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.5,\n    },\n  },\n};\n\nexport const TitleChildVariants = {\n  hidden: { opacity: 0, y: -50 },\n  show: { opacity: 1, y: 0 },\n};\n","/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/PlayerControls.js",[],"/Users/jim/Documents/projects/tictactoe/tictactoe/src/styles/PlayerControl.js",[],["57","58"],"/Users/jim/Documents/projects/tictactoe/tictactoe/src/components/Title.js",["59"],"import { motion } from 'framer-motion';\nimport { TitleContainer, TitleStyle } from '../styles/GeneralStyles';\nimport { TitleParentVariants, TitleChildVariants } from '../styles/Animations';\nimport '../App.css';\n\nconst Title = () => {\n  return (\n    <div>\n      <TitleContainer\n        variants={TitleParentVariants}\n        initial=\"hidden\"\n        animate=\"show\"\n        whileHover=\"hover\"\n      >\n        <TitleStyle className=\"titleFont\" variants={TitleChildVariants}>\n          Tic\n        </TitleStyle>\n        <TitleStyle className=\"titleFont\" variants={TitleChildVariants}>\n          Tac\n        </TitleStyle>\n        <TitleStyle className=\"titleFont\" variants={TitleChildVariants}>\n          Toe\n        </TitleStyle>\n      </TitleContainer>\n    </div>\n  );\n};\n\nexport default Title;\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":16},{"ruleId":"64","severity":1,"message":"69","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":26},{"ruleId":"64","severity":1,"message":"70","line":91,"column":9,"nodeType":"66","messageId":"67","endLine":91,"endColumn":10},{"ruleId":"64","severity":1,"message":"71","line":92,"column":9,"nodeType":"66","messageId":"67","endLine":92,"endColumn":11},{"ruleId":"64","severity":1,"message":"72","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":18},{"ruleId":"64","severity":1,"message":"68","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":16},{"ruleId":"60","replacedBy":"73"},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","severity":1,"message":"68","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":16},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'motion' is defined but never used.","'IoMdColorPalette' is defined but never used.","'i' is assigned a value but never used.","'ii' is assigned a value but never used.","'useState' is defined but never used.",["75"],["76"],"no-global-assign","no-unsafe-negation"]